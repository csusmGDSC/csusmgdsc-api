// Code generated by MockGen. DO NOT EDIT.
// Source: internal/db/interfaces.go
//
// Generated by this command:
//
//	mockgen -source=internal/db/interfaces.go -destination=internal/mocks/mock_connection.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	sql "database/sql"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockDatabaseConnection is a mock of DatabaseConnection interface.
type MockDatabaseConnection struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseConnectionMockRecorder
	isgomock struct{}
}

// MockDatabaseConnectionMockRecorder is the mock recorder for MockDatabaseConnection.
type MockDatabaseConnectionMockRecorder struct {
	mock *MockDatabaseConnection
}

// NewMockDatabaseConnection creates a new mock instance.
func NewMockDatabaseConnection(ctrl *gomock.Controller) *MockDatabaseConnection {
	mock := &MockDatabaseConnection{ctrl: ctrl}
	mock.recorder = &MockDatabaseConnectionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseConnection) EXPECT() *MockDatabaseConnectionMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockDatabaseConnection) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockDatabaseConnectionMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockDatabaseConnection)(nil).Close))
}

// Connect mocks base method.
func (m *MockDatabaseConnection) Connect() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Connect")
	ret0, _ := ret[0].(error)
	return ret0
}

// Connect indicates an expected call of Connect.
func (mr *MockDatabaseConnectionMockRecorder) Connect() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Connect", reflect.TypeOf((*MockDatabaseConnection)(nil).Connect))
}

// GetDB mocks base method.
func (m *MockDatabaseConnection) GetDB() *sql.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDB")
	ret0, _ := ret[0].(*sql.DB)
	return ret0
}

// GetDB indicates an expected call of GetDB.
func (mr *MockDatabaseConnectionMockRecorder) GetDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDB", reflect.TypeOf((*MockDatabaseConnection)(nil).GetDB))
}
